{"ast":null,"code":"var _jsxFileName = \"D:\\\\wtproj\\\\wtprojnew\\\\src\\\\components\\\\NewsLetter.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../styles/components/NewsLetter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsLetters = () => {\n  _s();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [newsletters, setNewsletters] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchNewsletters = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/member/newsletters\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setNewsletters(data.data);\n        } else {\n          setError(data.message || \"Failed to fetch newsletters.\");\n        }\n      } catch (err) {\n        setError(\"An error occurred while fetching newsletters.\");\n      }\n    };\n    if (token) {\n      fetchNewsletters();\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newsletters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Newsletters & Announcements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"newsletters__error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), newsletters.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"newsletters__list\",\n      children: newsletters.map(newsletter => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"newsletters__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: newsletter.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: newsletter.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"newsletters__date\",\n          children: [\"Published on: \", new Date(newsletter.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)]\n      }, newsletter._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No newsletters available at the moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsLetters, \"jJTDZ7PNDFJ3LpaoAHLWE9KwEU8=\");\n_c = NewsLetters;\nexport default NewsLetters;\nvar _c;\n$RefreshReg$(_c, \"NewsLetters\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","jsxDEV","_jsxDEV","NewsLetters","_s","token","newsletters","setNewsletters","error","setError","fetchNewsletters","response","fetch","headers","Authorization","data","json","ok","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","newsletter","title","content","Date","date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["D:/wtproj/wtprojnew/src/components/NewsLetter.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport \"../styles/components/NewsLetter.css\";\r\n\r\nconst NewsLetters = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [newsletters, setNewsletters] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchNewsletters = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/member/newsletters\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setNewsletters(data.data);\r\n        } else {\r\n          setError(data.message || \"Failed to fetch newsletters.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"An error occurred while fetching newsletters.\");\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchNewsletters();\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"newsletters\">\r\n      <h2>Newsletters & Announcements</h2>\r\n      {error && <p className=\"newsletters__error\">{error}</p>}\r\n      {newsletters.length > 0 ? (\r\n        <ul className=\"newsletters__list\">\r\n          {newsletters.map((newsletter) => (\r\n            <li key={newsletter._id} className=\"newsletters__item\">\r\n              <h3>{newsletter.title}</h3>\r\n              <p>{newsletter.content}</p>\r\n              <p className=\"newsletters__date\">\r\n                Published on: {new Date(newsletter.date).toLocaleDateString()}\r\n              </p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No newsletters available at the moment.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsLetters;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}