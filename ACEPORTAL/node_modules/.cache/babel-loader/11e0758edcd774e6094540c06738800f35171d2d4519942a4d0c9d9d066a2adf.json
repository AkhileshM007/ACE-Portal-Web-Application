{"ast":null,"code":"var _jsxFileName = \"D:\\\\wtproj\\\\wtprojnew\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\n\n// Create the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// AuthContext Provider Component\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user from localStorage on mount\n  useEffect(() => {\n    const fetchUser = async () => {\n      const storedUser = localStorage.getItem(\"user\");\n      if (storedUser) {\n        setCurrentUser(JSON.parse(storedUser)); // Set the current user from localStorage if available\n      }\n      setLoading(false); // Stop loading when data is fetched\n    };\n    fetchUser();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setCurrentUser(data.user); // Set the user state after successful login\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user to localStorage\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: data.message\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: \"An error occurred during login.\"\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    setCurrentUser(null); // Clear the current user state\n    localStorage.removeItem(\"user\"); // Remove user data from localStorage\n  };\n\n  // Provide the context to child components\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      logout,\n      loading\n    },\n    children: [!loading && children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","fetchUser","storedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","data","json","ok","user","setItem","success","message","error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/wtproj/wtprojnew/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\n// Create the AuthContext\r\nconst AuthContext = createContext();\r\n\r\n// AuthContext Provider Component\r\nconst AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user from localStorage on mount\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const storedUser = localStorage.getItem(\"user\");\r\n      if (storedUser) {\r\n        setCurrentUser(JSON.parse(storedUser)); // Set the current user from localStorage if available\r\n      }\r\n      setLoading(false); // Stop loading when data is fetched\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setCurrentUser(data.user); // Set the user state after successful login\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user to localStorage\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, message: data.message };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, message: \"An error occurred during login.\" };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setCurrentUser(null); // Clear the current user state\r\n    localStorage.removeItem(\"user\"); // Remove user data from localStorage\r\n  };\r\n\r\n  // Provide the context to child components\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout, loading }}>\r\n      {!loading && children} {/* Ensure children are rendered only when loading is false */}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC/C,IAAIF,UAAU,EAAE;QACdJ,cAAc,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;MAC1C;MACAF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACnEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAET,IAAI,CAACU,SAAS,CAAC;UAAEP,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfpB,cAAc,CAACkB,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;QAC3BhB,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEf,IAAI,CAACU,SAAS,CAACC,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;QACzD,OAAO;UAAEE,OAAO,EAAE;QAAK,CAAC;MAC1B,CAAC,MAAM;QACL,OAAO;UAAEA,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEN,IAAI,CAACM;QAAQ,CAAC;MAClD;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,OAAO;QAAEF,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAkC,CAAC;IACvE;EACF,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB1B,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtBK,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;;EAED;EACA,oBACEjC,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,WAAW;MAAEU,KAAK;MAAEiB,MAAM;MAAEzB;IAAQ,CAAE;IAAAJ,QAAA,GAClE,CAACI,OAAO,IAAIJ,QAAQ,EAAC,GAAC;EAAA;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE3B,CAAC;AAACnC,EAAA,CAlDIF,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAoDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}