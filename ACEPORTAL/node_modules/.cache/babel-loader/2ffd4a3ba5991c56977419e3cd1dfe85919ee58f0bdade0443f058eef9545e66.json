{"ast":null,"code":"var _jsxFileName = \"D:\\\\wtproj\\\\wtprojnew\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/components/EventsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = ({\n  memberId\n}) => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/events\");\n        const data = await response.json();\n        if (response.ok) {\n          setEvents(data);\n        } else {\n          setError(\"Failed to fetch events.\");\n        }\n      } catch (err) {\n        setError(\"An error occurred while fetching events.\");\n      }\n    };\n    fetchEvents();\n  }, []);\n  const handleRegister = async eventId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/events/${eventId}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          memberId\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccessMessage(`Successfully registered for event: ${data.eventName}`);\n      } else {\n        setError(data.message || \"Failed to register for the event.\");\n      }\n    } catch (err) {\n      setError(\"An error occurred while registering for the event.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"events-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upcoming Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"events-page__error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"events-page__success\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events-page__list\",\n      children: events.length > 0 ? events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"events-page__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), \" \", new Date(event.date).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), \" \", event.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), event.requiresRegistration && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRegister(event.id),\n          className: \"events-page__register-btn\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No upcoming events.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsPage, \"APcrI648BbEuz/ayfirPQ3D47nU=\");\n_c = EventsPage;\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EventsPage","memberId","_s","events","setEvents","error","setError","successMessage","setSuccessMessage","fetchEvents","response","fetch","data","json","ok","err","handleRegister","eventId","method","headers","body","JSON","stringify","eventName","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","name","Date","date","toLocaleDateString","description","requiresRegistration","onClick","id","_c","$RefreshReg$"],"sources":["D:/wtproj/wtprojnew/src/pages/EventsPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/components/EventsPage.css\";\r\n\r\nconst EventsPage = ({ memberId }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/events\");\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          setEvents(data);\r\n        } else {\r\n          setError(\"Failed to fetch events.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"An error occurred while fetching events.\");\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const handleRegister = async (eventId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/events/${eventId}/register`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ memberId }),\r\n        }\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMessage(`Successfully registered for event: ${data.eventName}`);\r\n      } else {\r\n        setError(data.message || \"Failed to register for the event.\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"An error occurred while registering for the event.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"events-page\">\r\n      <h1>Upcoming Events</h1>\r\n\r\n      {error && <p className=\"events-page__error\">{error}</p>}\r\n      {successMessage && (\r\n        <p className=\"events-page__success\">{successMessage}</p>\r\n      )}\r\n\r\n      <div className=\"events-page__list\">\r\n        {events.length > 0 ? (\r\n          events.map((event) => (\r\n            <div key={event.id} className=\"events-page__card\">\r\n              <h2>{event.name}</h2>\r\n              <p>\r\n                <strong>Date:</strong>{\" \"}\r\n                {new Date(event.date).toLocaleDateString()}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong> {event.description}\r\n              </p>\r\n              {event.requiresRegistration && (\r\n                <button\r\n                  onClick={() => handleRegister(event.id)}\r\n                  className=\"events-page__register-btn\"\r\n                >\r\n                  Register\r\n                </button>\r\n              )}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No upcoming events.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}